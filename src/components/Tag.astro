---
interface Props {
	colorIndex: number
	name: string
}
const { colorIndex, name } = Astro.props
// const colors = ['red', 'orange', 'amber', 'lime', 'emerald', 'cyan', 'blue', 'indigo', 'violet', 'fuchsia', 'rose']
let colorVariant = [
	{ fill: 'fill-red-200', bg: 'bg-red-200', text: 'text-red-500' },
	{ fill: 'fill-orange-200', bg: 'bg-orange-200', text: 'text-orange-500' },
	{ fill: 'fill-amber-200', bg: 'bg-amber-200', text: 'text-amber-500' },
	{ fill: 'fill-lime-200', bg: 'bg-lime-200', text: 'text-lime-500' },
	{
		fill: 'fill-emerald-200',
		bg: 'bg-emerald-200',
		text: 'text-emerald-500',
	},
	{ fill: 'fill-cyan-200', bg: 'bg-cyan-200', text: 'text-cyan-500' },
	{ fill: 'fill-blue-200', bg: 'bg-blue-200', text: 'text-blue-500' },
	{ fill: 'fill-indigo-200', bg: 'bg-indigo-200', text: 'text-indigo-500' },
	{ fill: 'fill-violet-200', bg: 'bg-violet-200', text: 'text-violet-500' },
	{
		fill: 'fill-fuchsia-200',
		bg: 'bg-fuchsia-200',
		text: 'text-fuchsia-500',
	},
	{ fill: 'fill-rose-200', bg: 'bg-rose-200', text: 'text-rose-500' },
]
---

<div>
	<div class="relative inline-block py-1 text-xs">
		<div class=`absolute inset-0 flex`>
			<svg
				class=`${colorVariant[colorIndex].fill}`
				height="100%"
				viewBox="0 0 50 100"
			>
				<path
					d="M49.9,0a17.1,17.1,0,0,0-12,5L5,37.9A17,17,0,0,0,5,62L37.9,94.9a17.1,17.1,0,0,0,12,5ZM25.4,59.4a9.5,9.5,0,1,1,9.5-9.5A9.5,9.5,0,0,1,25.4,59.4Z"
				></path>
			</svg>
			<div
				class=`flex-grow h-full -ml-px ${colorVariant[colorIndex].bg} rounded-md rounded-l-none`
			>
			</div>
		</div>
		<span class=`relative uppercase pr-px`>
			<span>&nbsp;&nbsp;&nbsp;&nbsp;</span><a
				href=`/${Astro.currentLocale}/tags/${name}`
				class=`font-medium no-underline ${colorVariant[colorIndex].text}`
				>{name}</a
			><span>&nbsp;</span>
		</span>
	</div>
</div>
