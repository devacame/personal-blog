---
import { type CollectionEntry, getCollection } from 'astro:content'
import GeneralLayout from '@layouts/GeneralLayout.astro'
import FormattedDate from '@components/FormattedDate.astro'
import SeriesTag from '@components/SeriesTag.astro'
import Tag from '@components/Tag.astro'

export async function getStaticPaths() {
	const posts = (await getCollection('blog'))
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<GeneralLayout title={post.data.title} description={post.data.description}>
	<script>
		document.getElementById('table-of-contents')?.remove()
	</script>
	<main class="w-full">
		<article class="m-auto prose dark:prose-invert">
			<div class="w-full">
				<img class="block my-0 mx-auto rounded-xl" style="box-shadow: var(--box-shadow)" width={1020} height={510} src={post.data.heroImage} alt="Head image of "+title />
			</div>
			<div class="mb-4 py-4 text-center leading-1">
				<div class="mb-2 text-[#60779f]">
					<FormattedDate date={post.data.pubDate} locale={post.data.language} />
					{
						post.data.updatedDate && (
							<div class="italic">
								Last updated on <FormattedDate date={post.data.updatedDate} locale={post.data.language} />
							</div>
						)
					}
				</div>
				<h1 class="mb-2">{post.data.title}</h1>
				{post.data.series && <SeriesTag series={post.data.series!} seriesNum={post.data.seriesNum!} />}
				<hr class="my-3" />
			</div>
			<Content />
			<div class="flex flex-wrap gap-x-2">
			{
				post.data.tags.map((tag, i) => <Tag name={tag} colorIndex={i%11} />)
			}
			</div>
		</article>
	</main>
</GeneralLayout>