---
import { type CollectionEntry, getCollection } from 'astro:content'
import Image from 'astro/components/Image.astro'
import GeneralLayout from '@layouts/GeneralLayout.astro'
import FormattedDate from '@components/FormattedDate.astro'
import SeriesTag from '@components/SeriesTag.astro'
import Tag from '@components/Tag.astro'
import Comments from '@components/Comments.astro'
import { getPostUrl, slugify } from '@utils/postslug'

export async function getStaticPaths() {
	const posts = (await getCollection('blog'))
		.filter((post) => !post.data.isDraft)
		.map((post) => {
			return {
				params: slugify(post.slug),
				props: post,
			}
		})
	return posts
}
type Props = CollectionEntry<'blog'>

const post = Astro.props
const { Content } = await post.render()

const allPosts = (await getCollection('blog'))
	.filter(
		(tpost) =>
			!tpost.data.isDraft && tpost.data.language == Astro.currentLocale,
	)
	.sort((a, b) => b.data.seriesNum! - a.data.seriesNum!)
let seriesPosts: Props[] = []
if (post.data.series != undefined) {
	seriesPosts = allPosts
		.filter((tpost) => tpost.data.series == post.data.series)
		.slice(0, 5)
}
const newPosts = allPosts.slice(0, 5)
---

<GeneralLayout
	title={post.data.title}
	description={post.data.description}
	otherLang={post.data.finishedLanguage}
>
	<script>
		document.getElementById('table-of-contents')?.remove()
	</script>
	<main data-pagefind-body>
		<article
			class="prose prose-cyan mx-auto w-full dark:prose-invert prose-img:mx-auto"
		>
			<div class="w-full">
				<Image
					class="mx-auto my-0 block rounded-xl"
					style="box-shadow: var(--box-shadow)"
					width={1020}
					height={510}
					src={`/open-graph/${getPostUrl(post.slug).slice(1, -1)}.png`}
					alt="Head image of "
					+title
				/>
			</div>
			<div class="leading-1 mb-4 py-4 text-center">
				<div
					class="mb-2 text-[var(--gray-dark)] dark:text-[var(--gray-light)]"
				>
					<FormattedDate
						date={post.data.pubDate}
						locale={post.data.language}
					/>
					{
						post.data.updatedDate && (
							<div class="italic">
								Last updated on{' '}
								<FormattedDate
									date={post.data.updatedDate}
									locale={post.data.language}
								/>
							</div>
						)
					}
				</div>
				<h1 class="mb-2">{post.data.title}</h1>
				{
					post.data.series && (
						<SeriesTag
							series={post.data.series!}
							seriesNum={post.data.seriesNum!}
						/>
					)
				}
				<hr class="my-3" />
			</div>
			<Content />
			<div class="flex flex-wrap gap-x-2">
				{
					post.data.tags.map((tag: string, i: number) => (
						<Tag name={tag} colorIndex={i % 11} />
					))
				}
			</div>
		</article>
		{
			seriesPosts.length > 0 && (
				<div class="mx-auto mt-4 flex max-w-[65ch] flex-col border-2 border-slate-500 text-black dark:border-slate-200 dark:text-white">
					<h2 class="text-lg font-bold">
						{post.data.language == 'en'
							? `Others in ${post.data.series}`
							: `${post.data.series}의 다른 글`}
					</h2>
					<ul class="flex flex-col gap-y-1">
						{seriesPosts.map((seriesPost) => (
							<a href={getPostUrl(seriesPost.slug)}>
								<li class="mx-auto flex justify-between border-t-2 border-slate-400 p-1 align-middle dark:border-slate-100">
									<h3 class="leading-0 my-auto max-w-[70%] overflow-hidden text-ellipsis whitespace-nowrap text-nowrap text-sm md:text-lg">
										{seriesPost.data.title}
									</h3>
									<FormattedDate
										className="leading-0 my-auto text-xs md:text-sm"
										date={seriesPost.data.pubDate}
										locale={seriesPost.data.language}
									/>
								</li>
							</a>
						))}
					</ul>
				</div>
			)
		}
		{
			allPosts.length > 0 && (
				<div class="mx-auto mt-4 flex max-w-[65ch] flex-col border-2 border-slate-500 text-black dark:border-slate-200 dark:text-white">
					<h2 class="text-lg font-bold">
						{post.data.language == 'en' ? 'New Posts' : '새 글'}
					</h2>
					<ul class="flex flex-col gap-y-1">
						{allPosts.map((p) => (
							<a href={getPostUrl(p.slug)}>
								<li class="mx-auto flex justify-between border-t-2 border-slate-400 p-1 align-middle dark:border-slate-100">
									<h3 class="leading-0 my-auto max-w-[70%] overflow-hidden text-ellipsis whitespace-nowrap text-nowrap text-sm md:text-lg">
										{p.data.title}
									</h3>
									<FormattedDate
										className="leading-0 my-auto text-xs md:text-sm"
										date={p.data.pubDate}
										locale={p.data.language}
									/>
								</li>
							</a>
						))}
					</ul>
				</div>
			)
		}
		<Comments />
	</main>
</GeneralLayout>
